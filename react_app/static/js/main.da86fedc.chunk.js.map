{"version":3,"sources":["components/profile_page/Profile.js","components/profile_page/ProfilePage.js","components/profile_page/Wheel.js","components/profile_page/Bus.js","components/car_page/CarPage.js","components/button/ButtonWithProps.js","components/button/ButtonWithChildren.js","App.js","serviceWorker.js","index.js"],"names":["Profile","profile","this","props","name","age","hobby","React","Component","ProfilePage","profiles","map","index","key","Wheel","wheel","style","display","backgroundColor","color","width","height","margin","Bus","handleChange","event","setState","passanger","target","value","handleSubmit","preventDefault","state","passangers","push","onSubmit","htmlFor","type","onChange","item","CarPage","ButtonWithProps","className","customStyle","onClick","onButtonClicked","buttonText","defaultProps","ButtonWithChildren","children","App","handleButtonClicked","text","console","log","pageToRender","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.da86fedc.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass Profile extends React.Component {\r\n  render() {\r\n    //Destructuring assignment\r\n    const { profile } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <h2> My Profile Component</h2>\r\n        <p>Name: {profile.name}</p>\r\n        <p>Age: {profile.age}</p>\r\n        <p>Hobby: {profile.hobby}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n","import React, { Component } from \"react\";\r\nimport Profile from \"./Profile\";\r\n\r\nclass ProfilePage extends Component {\r\n  render() {\r\n    const profile = { hobby: \"plants\", age: 21, name: \"Razvan\" };\r\n    const profile1 = { hobby: \"cars\", age: 21, name: \"Andrei\" };\r\n    const profile2 = { hobby: \"clothes\", age: 21, name: \"Paulina\" };\r\n\r\n    const profiles = [profile, profile1, profile2];\r\n\r\n    return (\r\n      <div>\r\n        <h1>Profile Page</h1>\r\n        {/* <Profile profile={profile} /> */}\r\n        {profiles.map((profile, index) => {\r\n          return <Profile key={\"profile\" + index} profile={profile} />;\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProfilePage;\r\n","import React from \"react\";\r\n\r\nclass Wheel extends React.Component {\r\n  render() {\r\n    const { wheel } = this.props;\r\n\r\n    return (\r\n      <div style={{ display: \"inline-block\" }}>\r\n        <div\r\n          style={{\r\n            backgroundColor: wheel.color,\r\n            width: \"50px\",\r\n            height: \"50px\",\r\n            margin: \"5px\"\r\n          }}\r\n        />\r\n\r\n        <p>{wheel.name}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Wheel;\r\n","import React from \"react\";\r\nimport Wheel from \"./Wheel\";\r\n\r\nclass Bus extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { passangers: [], passanger: { name: \"\" } };\r\n\r\n    // this.handleChange = this.handleChange.bind(this);\r\n    // this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({ passanger: { name: event.target.value } });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.state.passangers.push(this.state.passanger);\r\n    let passangers = this.state.passangers;\r\n    this.setState({ passangers: passangers });\r\n    this.setState({ passanger: { name: \"\" } });\r\n  };\r\n\r\n  render() {\r\n    const wheels = [\r\n      { color: \"red\", name: \"wheel1\" },\r\n      { color: \"green\", name: \"wheel2\" },\r\n      { color: \"blue\", name: \"wheel3\" },\r\n      { color: \"yellow\", name: \"wheel4\" }\r\n    ];\r\n\r\n    return (\r\n      <div>\r\n        <h1>This is the bus</h1>\r\n        <div>\r\n          <p>Add passanger</p>\r\n          <form onSubmit={this.handleSubmit}>\r\n            <label htmlFor='name'></label>\r\n            <input\r\n              type='text'\r\n              name='name'\r\n              value={this.state.passanger.name}\r\n              onChange={this.handleChange}></input>\r\n\r\n            <button type='submit' value='Submit'>\r\n              Add\r\n            </button>\r\n          </form>\r\n          <div>\r\n            <p>Passangers:</p>\r\n            {this.state.passangers.map((passanger, index) => {\r\n              return <p key={index}>{passanger.name}</p>;\r\n            })}\r\n          </div>\r\n        </div>\r\n        {wheels.map((item, index) => {\r\n          return <Wheel key={\"item\" + index} wheel={item} />;\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Bus;\r\n","import React from \"react\";\r\n\r\nexport default class CarPage extends React.Component {\r\n  render() {\r\n    return <div></div>;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport css from \"./button.css\";\r\n\r\nexport default class ButtonWithProps extends React.Component {\r\n  render() {\r\n    return (\r\n      <button\r\n        className='button-with-props'\r\n        style={this.props.customStyle}\r\n        onClick={() => {\r\n          this.props.onButtonClicked(\"text\");\r\n        }}>\r\n        {this.props.buttonText}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nButtonWithProps.defaultProps = {\r\n  buttonText: \"Hello\"\r\n};\r\n","import React from \"react\";\r\n\r\nexport default class ButtonWithChildren extends React.Component {\r\n  render() {\r\n    const { children } = this.props;\r\n\r\n    return (\r\n      <button className='button-with-children'>{children || \"Click\"}</button>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport ProfilePage from \"./components/profile_page/ProfilePage\";\nimport Bus from \"./components/profile_page/Bus\";\nimport CarPage from \"./components/car_page/CarPage\";\nimport ButtonWithProps from \"./components/button/ButtonWithProps\";\nimport ButtonWithChildren from \"./components/button/ButtonWithChildren\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pageToRender: <Bus />\n    };\n  }\n\n  handleButtonClicked = text => {\n    console.log(text);\n  };\n\n  render() {\n    const { pageToRender } = this.state;\n\n    return (\n      <div className='App'>\n        <ButtonWithProps\n          buttonText='Bus page'\n          onButtonClicked={() => this.setState({ pageToRender: <Bus /> })}\n        />\n        <ButtonWithProps\n          buttonText='Profile page'\n          onButtonClicked={() =>\n            this.setState({ pageToRender: <ProfilePage /> })\n          }\n        />\n        <ButtonWithProps\n          buttonText='CarPage'\n          onButtonClicked={() => this.setState({ pageToRender: <CarPage /> })}\n        />\n        {/* <button\n          buttonText='Bus page'\n          onClick={() => {\n            this.setState({ pageToRender: <Bus /> });\n          }}>\n          Bus page\n        </button> */}\n        <ButtonWithChildren>My text</ButtonWithChildren>\n        {pageToRender}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}